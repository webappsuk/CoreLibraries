//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplications.Utilities.Service {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ServiceResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ServiceResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WebApplications.Utilities.Service.ServiceResources", typeof(ServiceResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no commands registered.
        /// </summary>
        internal static string BaseService_Help_NoCommands {
            get {
                return ResourceManager.GetString("BaseService_Help_NoCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copying service to {0}....
        /// </summary>
        internal static string BaseService_Install_CopyingService {
            get {
                return ResourceManager.GetString("BaseService_Install_CopyingService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid password!.
        /// </summary>
        internal static string BaseService_Install_InvalidPassword {
            get {
                return ResourceManager.GetString("BaseService_Install_InvalidPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid user name!.
        /// </summary>
        internal static string BaseService_Install_InvalidUserName {
            get {
                return ResourceManager.GetString("BaseService_Install_InvalidUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process running in vshost, using &apos;{0}&apos; instead..
        /// </summary>
        internal static string BaseService_Install_vshostProcess {
            get {
                return ResourceManager.GetString("BaseService_Install_vshostProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue the service..
        /// </summary>
        internal static string Cmd_Continue_Description {
            get {
                return ResourceManager.GetString("Cmd_Continue_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue,Cont,C.
        /// </summary>
        internal static string Cmd_Continue_Names {
            get {
                return ResourceManager.GetString("Cmd_Continue_Names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An application-defined command flag that indicates which custom command to execute. The value must be between 128 and 256, inclusive..
        /// </summary>
        internal static string Cmd_CustomCommand_Command_Description {
            get {
                return ResourceManager.GetString("Cmd_CustomCommand_Command_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executes the custom command number, e.g. command 135..
        /// </summary>
        internal static string Cmd_CustomCommand_Description {
            get {
                return ResourceManager.GetString("Cmd_CustomCommand_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command,Execute,Exec,..
        /// </summary>
        internal static string Cmd_CustomCommand_Names {
            get {
                return ResourceManager.GetString("Cmd_CustomCommand_Names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No description is available for the command in the current language..
        /// </summary>
        internal static string Cmd_Description {
            get {
                return ResourceManager.GetString("Cmd_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnect from the service without shutting it down.  If running in interactive console mode, consider using the Shutdown if you wish the service to cleanly exit..
        /// </summary>
        internal static string Cmd_Disconnect_Description {
            get {
                return ResourceManager.GetString("Cmd_Disconnect_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quit,Exit,X,Disconnect.
        /// </summary>
        internal static string Cmd_Disconnect_Names {
            get {
                return ResourceManager.GetString("Cmd_Disconnect_Names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the command to get help for. If omitted, all commands will be listed..
        /// </summary>
        internal static string Cmd_Help_Command_Description {
            get {
                return ResourceManager.GetString("Cmd_Help_Command_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outputs this help..
        /// </summary>
        internal static string Cmd_Help_Description {
            get {
                return ResourceManager.GetString("Cmd_Help_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help,?.
        /// </summary>
        internal static string Cmd_Help_Names {
            get {
                return ResourceManager.GetString("Cmd_Help_Names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the parameter to get help for. If omitted, all parameters of the command will be listed..
        /// </summary>
        internal static string Cmd_Help_Parameter_Description {
            get {
                return ResourceManager.GetString("Cmd_Help_Parameter_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installs the running service as a windows service..
        /// </summary>
        internal static string Cmd_Install_Description {
            get {
                return ResourceManager.GetString("Cmd_Install_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        internal static string Cmd_Install_Names {
            get {
                return ResourceManager.GetString("Cmd_Install_Names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The optional password for the account the service is to run under.  An incorrect password will prevent the service from starting..
        /// </summary>
        internal static string Cmd_Install_Password_Description {
            get {
                return ResourceManager.GetString("Cmd_Install_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The optional username for the service to run under (note must have enough permission to interact with local performance counters and filesystem).  Use form &quot;DomainName\UserName&quot;, e.g. &quot;NT AUTHORITY\LocalService&quot; for local service account; &quot;NT AUTHORITY\NetworkService&quot; for network service account; &quot;NT Service\ServiceName&quot; to use a virtual account; or &quot;.\UserName&quot; to use a local account.  The default is to use the LocalSystem account, but this doesn&apos;t normally have the required permissions and so the service  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Cmd_Install_UserName_Description {
            get {
                return ResourceManager.GetString("Cmd_Install_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No description is available for the parameter in the current language..
        /// </summary>
        internal static string Cmd_Param_Description {
            get {
                return ResourceManager.GetString("Cmd_Param_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pauses the service..
        /// </summary>
        internal static string Cmd_Pause_Description {
            get {
                return ResourceManager.GetString("Cmd_Pause_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pause,P.
        /// </summary>
        internal static string Cmd_Pause_Names {
            get {
                return ResourceManager.GetString("Cmd_Pause_Names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the performance counter to get the details of. If omitted, all performance counters will be listed..
        /// </summary>
        internal static string Cmd_Performance_Category_Description {
            get {
                return ResourceManager.GetString("Cmd_Performance_Category_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the performance counters for this service..
        /// </summary>
        internal static string Cmd_Performance_Description {
            get {
                return ResourceManager.GetString("Cmd_Performance_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perf,Performance.
        /// </summary>
        internal static string Cmd_Performance_Names {
            get {
                return ResourceManager.GetString("Cmd_Performance_Names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sends the power status to the service, e.g. power Suspend..
        /// </summary>
        internal static string Cmd_PowerEvent_Description {
            get {
                return ResourceManager.GetString("Cmd_PowerEvent_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power.
        /// </summary>
        internal static string Cmd_PowerEvent_Names {
            get {
                return ResourceManager.GetString("Cmd_PowerEvent_Names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The power status to send to the service.  This is only available in interactive mode..
        /// </summary>
        internal static string Cmd_PowerEvent_PowerStatus_Description {
            get {
                return ResourceManager.GetString("Cmd_PowerEvent_PowerStatus_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The reason for the change notice..
        /// </summary>
        internal static string Cmd_SessionChange_ChangeReason_Description {
            get {
                return ResourceManager.GetString("Cmd_SessionChange_ChangeReason_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sends a session changed notice to the service, e.g session SessionLogon 0.
        /// </summary>
        internal static string Cmd_SessionChange_Description {
            get {
                return ResourceManager.GetString("Cmd_SessionChange_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Session.
        /// </summary>
        internal static string Cmd_SessionChange_Names {
            get {
                return ResourceManager.GetString("Cmd_SessionChange_Names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ID of the session..
        /// </summary>
        internal static string Cmd_SessionChange_SessionID_Description {
            get {
                return ResourceManager.GetString("Cmd_SessionChange_SessionID_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shuts down the service and quits.  This is only available in interactive mode..
        /// </summary>
        internal static string Cmd_Shutdown_Description {
            get {
                return ResourceManager.GetString("Cmd_Shutdown_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutdown.
        /// </summary>
        internal static string Cmd_Shutdown_Names {
            get {
                return ResourceManager.GetString("Cmd_Shutdown_Names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service start arguments..
        /// </summary>
        internal static string Cmd_Start_Args_Description {
            get {
                return ResourceManager.GetString("Cmd_Start_Args_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starts the service, passing in the specified arguments, e.g. start arg1 arg2 arg3..
        /// </summary>
        internal static string Cmd_Start_Description {
            get {
                return ResourceManager.GetString("Cmd_Start_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start,Go,G.
        /// </summary>
        internal static string Cmd_Start_Names {
            get {
                return ResourceManager.GetString("Cmd_Start_Names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stops the service..
        /// </summary>
        internal static string Cmd_Stop_Description {
            get {
                return ResourceManager.GetString("Cmd_Stop_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop,S.
        /// </summary>
        internal static string Cmd_Stop_Names {
            get {
                return ResourceManager.GetString("Cmd_Stop_Names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalls the running service as a windows service..
        /// </summary>
        internal static string Cmd_Uninstall_Description {
            get {
                return ResourceManager.GetString("Cmd_Uninstall_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        internal static string Cmd_Uninstall_Names {
            get {
                return ResourceManager.GetString("Cmd_Uninstall_Names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {!fgcolor:White}Instance GUID: {!fgcolor:Yellow}{guid}
        ///
        ///{!fgcolor:White}The following performance categories are loaded:
        ///
        ///{!fgcolor:Yellow}{counters:{&lt;items&gt;:{&lt;item&gt;:{CategoryName}}}{&lt;join&gt;:
        ///}}
        ///{!fgcolor}
        ///Type &apos;perf {!fgcolor:Yellow}&lt;category&gt;{!fgcolor}&apos; for more details of a specific counter.
        ///.
        /// </summary>
        internal static string Command_AllPerformanceCategoriesFormat {
            get {
                return ResourceManager.GetString("Command_AllPerformanceCategoriesFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {!fgcolor:Red}The command &apos;{Name}&apos; does not exist.
        ///.
        /// </summary>
        internal static string Command_Help_CommandNotFoundFormat {
            get {
                return ResourceManager.GetString("Command_Help_CommandNotFoundFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {!fgcolor:Red}The parameter &apos;{ParamName}&apos; does not exist on the &apos;{CommandName}&apos; command.
        ///.
        /// </summary>
        internal static string Command_Help_CommandParameterNotFoundFormat {
            get {
                return ResourceManager.GetString("Command_Help_CommandParameterNotFoundFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {!fgcolor:Red}The performance counter &apos;{Name}&apos; does not exist.
        ///.
        /// </summary>
        internal static string Command_Performance_CatergoryNotFoundFormat {
            get {
                return ResourceManager.GetString("Command_Performance_CatergoryNotFoundFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {!fgcolor:White}The following commands are available:
        ///{!fgcolor}
        ///{commands:{&lt;items&gt;:{&lt;item&gt;:{!fgcolor:Lime}{Name}{AltNames:{!fgcolor:Green} [{&lt;items&gt;:{&lt;item&gt;}}{&lt;join&gt;:|}]}{!fgcolor}
        ///{!layout:f4;i4}{Parameters:{&lt;items&gt;:{&lt;item&gt;:{!fgcolor:White}{Name}{DefaultValue:{!fgcolor:Silver}={DefaultValue}}{!fgcolor}{Params:{Params}...}
        ///}}}{!layout}{!layout:f8;i8}{Description}{!layout}}}{&lt;join&gt;:
        ///}}
        ///
        ///Type &apos;help {!fgcolor:Lime}&lt;command&gt;{!fgcolor}&apos; for more information on a specific command..
        /// </summary>
        internal static string Commands_AllCommandsHelpFormat {
            get {
                return ResourceManager.GetString("Commands_AllCommandsHelpFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {!layout:f0}{!fgcolor:White}Help for the {!fgcolor:Lime}&apos;{Command:{Name}}&apos;{!fgcolor:White} command.{!fgcolor}{!layout}
        ///{Command:{AltNames:{!layout:f0}Alternate names:
        ///{!layout}{!fgcolor:White}{&lt;items&gt;:{&lt;item&gt;}}{&lt;join&gt;:, }{!fgcolor}
        ///}}
        ///{!layout:f0}Description: 
        ///{!layout}{Command:{Description}}
        ///
        ///{Command:{Parameters:{!layout:f0}Parameters:{!layout}
        ///{&lt;items&gt;:{&lt;item&gt;:{!fgcolor:White}{Name}{DefaultValue:{!fgcolor:Silver}={DefaultValue}}{!fgcolor}{Params:{Params}...}{Description:
        ///{!layout:f8;i10}{Descrip [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Commands_CommandHelpFormat {
            get {
                return ResourceManager.GetString("Commands_CommandHelpFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {!layout:f0}{!fgcolor:White}Help for the {!fgcolor:Lime}&apos;{Parameter:{Name}}&apos;{!fgcolor:White} parameter for the {!fgcolor:Lime}&apos;{Command:{Name}}&apos;{!fgcolor:White} command.{!fgcolor}{!layout}
        ///{Parameter:{DefaultValue:{!layout:f0}Default value:{!layout}{!fgcolor:White}{DefaultValue}{!fgcolor}
        ///}}
        ///{!layout:f0}Description:
        ///{!layout}{Parameter:{Description}}
        ///.
        /// </summary>
        internal static string Commands_ParameterHelpFormat {
            get {
                return ResourceManager.GetString("Commands_ParameterHelpFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {!fgcolor:Red}Error: {Message}
        ///{!fgcolor}.
        /// </summary>
        internal static string ConsoleConnection_ErrorFormat {
            get {
                return ResourceManager.GetString("ConsoleConnection_ErrorFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid user name!.
        /// </summary>
        internal static string ConsoleConnection_GetUserNamePassword_InvalidUserName {
            get {
                return ResourceManager.GetString("ConsoleConnection_GetUserNamePassword_InvalidUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password: .
        /// </summary>
        internal static string ConsoleConnection_GetUserNamePassword_Password {
            get {
                return ResourceManager.GetString("ConsoleConnection_GetUserNamePassword_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name: .
        /// </summary>
        internal static string ConsoleConnection_GetUserNamePassword_Username {
            get {
                return ResourceManager.GetString("ConsoleConnection_GetUserNamePassword_Username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {!fgcolor:Yellow}Select one of :
        ///{!layout:i3;f5}{Options:{&lt;items&gt;:
        ///{!fgcolor:Cyan}{Key}	{!fgcolor:White}{Value}}}
        ///{!layout}
        ///.
        /// </summary>
        internal static string ConsoleConnection_InstallPromptFormat {
            get {
                return ResourceManager.GetString("ConsoleConnection_InstallPromptFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {!fgcolor:Teal}{localtime:{Value:HH:mm:ss.ffff &apos;(UTC&apos;z&apos;)&apos;}} {!fgcolor:LogLevel}{level:{Value}} {!fgcolor}	{message:{Value}}
        ///.
        /// </summary>
        internal static string ConsoleConnection_LogFormat {
            get {
                return ResourceManager.GetString("ConsoleConnection_LogFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {!fgcolor:Cyan}[{Time:HH:mm:ss.ffff &apos;(UTC&apos;z&apos;)&apos;}] {!fgcolor:Yellow}{State}{!fgcolor} &gt; .
        /// </summary>
        internal static string ConsoleConnection_PromptFormat {
            get {
                return ResourceManager.GetString("ConsoleConnection_PromptFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to continue service....
        /// </summary>
        internal static string ConsoleConnection_RunAsync_AttemptingContinue {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_AttemptingContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to pause service....
        /// </summary>
        internal static string ConsoleConnection_RunAsync_AttemptingPause {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_AttemptingPause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to start service....
        /// </summary>
        internal static string ConsoleConnection_RunAsync_AttemptingStart {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_AttemptingStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to stop service....
        /// </summary>
        internal static string ConsoleConnection_RunAsync_AttemptingStop {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_AttemptingStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancelling command....
        /// </summary>
        internal static string ConsoleConnection_RunAsync_Cancelling {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_Cancelling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure .
        /// </summary>
        internal static string ConsoleConnection_RunAsync_ConfigureTitle {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_ConfigureTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue service..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_OptionContinue {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_OptionContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_OptionExit {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_OptionExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install service..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_OptionInstall {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_OptionInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pause service..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_OptionPause {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_OptionPause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart service..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_OptionRestart {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_OptionRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run service from command line with interaction..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_OptionRunCmd {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_OptionRunCmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change current credentials..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_OptionRunCmdNewCredentials {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_OptionRunCmdNewCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run service without interaction..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_OptionRunNoInteraction {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_OptionRunNoInteraction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start service..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_OptionStart {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_OptionStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run service from command line with interaction and start the service..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_OptionStartCmd {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_OptionStartCmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop service..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_OptionStop {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_OptionStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall service..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_OptionUninstall {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_OptionUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press any key to exit....
        /// </summary>
        internal static string ConsoleConnection_RunAsync_PressKeyToExit {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_PressKeyToExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running service in non-interactive mode (use CTRL-C to kill)..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_RunningNonInteractive {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_RunningNonInteractive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To control, connect using a service client..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_RunningNonInteractive2 {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_RunningNonInteractive2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running .
        /// </summary>
        internal static string ConsoleConnection_RunAsync_RunningTitle {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_RunningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; service is installed and {1}..
        /// </summary>
        internal static string ConsoleConnection_RunAsync_ServiceInstalledState {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_ServiceInstalledState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for service to be detected....
        /// </summary>
        internal static string ConsoleConnection_RunAsync_WaitInstall {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_WaitInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for service removal to be detected....
        /// </summary>
        internal static string ConsoleConnection_RunAsync_WaitUninstall {
            get {
                return ResourceManager.GetString("ConsoleConnection_RunAsync_WaitUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done..
        /// </summary>
        internal static string Done {
            get {
                return ResourceManager.GetString("Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; does not define a GuidAttribute, so creating a random one. Add a GuidAttribute to prevent multiple instances of the service being started..
        /// </summary>
        internal static string Err_BaseService_CouldNotLocateAssemblyGuid {
            get {
                return ResourceManager.GetString("Err_BaseService_CouldNotLocateAssemblyGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another instance of the service is running so this instance cannot be started..
        /// </summary>
        internal static string Err_BaseService_Failed_To_Acquire_WaitHandle {
            get {
                return ResourceManager.GetString("Err_BaseService_Failed_To_Acquire_WaitHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal error in constructor..
        /// </summary>
        internal static string Err_BaseService_FatalConstructorError {
            get {
                return ResourceManager.GetString("Err_BaseService_FatalConstructorError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal error in OnContinue.
        /// </summary>
        internal static string Err_BaseService_OnContinue_FatalError {
            get {
                return ResourceManager.GetString("Err_BaseService_OnContinue_FatalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal error in OnCustomCommand &apos;{0}&apos;..
        /// </summary>
        internal static string Err_BaseService_OnCustomCommand_FatalError {
            get {
                return ResourceManager.GetString("Err_BaseService_OnCustomCommand_FatalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal error in OnPause.
        /// </summary>
        internal static string Err_BaseService_OnPause_FatalError {
            get {
                return ResourceManager.GetString("Err_BaseService_OnPause_FatalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal error in OnPowerEvent.
        /// </summary>
        internal static string Err_BaseService_OnPowerEvent_FatalError {
            get {
                return ResourceManager.GetString("Err_BaseService_OnPowerEvent_FatalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal error in OnSessionChange.
        /// </summary>
        internal static string Err_BaseService_OnSessionChange_FatalError {
            get {
                return ResourceManager.GetString("Err_BaseService_OnSessionChange_FatalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal error in OnShutdown.
        /// </summary>
        internal static string Err_BaseService_OnShutdown_FatalError {
            get {
                return ResourceManager.GetString("Err_BaseService_OnShutdown_FatalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal error in OnStart.
        /// </summary>
        internal static string Err_BaseService_OnStart_FatalError {
            get {
                return ResourceManager.GetString("Err_BaseService_OnStart_FatalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal error in OnStop.
        /// </summary>
        internal static string Err_BaseService_OnStop_FatalError {
            get {
                return ResourceManager.GetString("Err_BaseService_OnStop_FatalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal error executing the &apos;{0}&apos; command..
        /// </summary>
        internal static string Err_Command_Exception {
            get {
                return ResourceManager.GetString("Err_Command_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; command failed..
        /// </summary>
        internal static string Err_Command_Failed {
            get {
                return ResourceManager.GetString("Err_Command_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service installation requires running as an administrator..
        /// </summary>
        internal static string Err_Install_Requires_Administrator {
            get {
                return ResourceManager.GetString("Err_Install_Requires_Administrator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A fatal error occurred on the current named pipe connection, closing..
        /// </summary>
        internal static string Err_NamedPipeConnection_Failed {
            get {
                return ResourceManager.GetString("Err_NamedPipeConnection_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get the current security identity for securing a named pipe, so aborting..
        /// </summary>
        internal static string Err_NamedPipeServer_CannotGetCurrentOwner {
            get {
                return ResourceManager.GetString("Err_NamedPipeServer_CannotGetCurrentOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A fatal error occurred trying to secure the named pipe server..
        /// </summary>
        internal static string Err_NamedPipeServer_Fatal_Error_Securing {
            get {
                return ResourceManager.GetString("Err_NamedPipeServer_Fatal_Error_Securing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; named pipe already exists on the server, and so cannot be created!.
        /// </summary>
        internal static string Err_NamedPipeServer_PipeAlreadyExists {
            get {
                return ResourceManager.GetString("Err_NamedPipeServer_PipeAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid pipe name &apos;{0}&apos;..
        /// </summary>
        internal static string Err_ServerConfig_InvalidPipeName {
            get {
                return ResourceManager.GetString("Err_ServerConfig_InvalidPipeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancellation token parameter should be of type CancellationToken, but was actually of type &apos;{0}&apos;.
        /// </summary>
        internal static string Err_ServiceCommand_CancellationTokenParameterWrongType {
            get {
                return ResourceManager.GetString("Err_ServiceCommand_CancellationTokenParameterWrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ID parameter &apos;{0}&apos; expected but not found in method &apos;{1}&apos;..
        /// </summary>
        internal static string Err_ServiceCommand_IDParameterMissing {
            get {
                return ResourceManager.GetString("Err_ServiceCommand_IDParameterMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID parameter should be of type Guid, but was actually of type &apos;{0}&apos;.
        /// </summary>
        internal static string Err_ServiceCommand_IDParameterWrongType {
            get {
                return ResourceManager.GetString("Err_ServiceCommand_IDParameterWrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid command method &apos;{0}&apos;. A service runner command with ConsumeLine set must declare exactly one string parameter..
        /// </summary>
        internal static string Err_ServiceCommand_Invalid_Command_Method {
            get {
                return ResourceManager.GetString("Err_ServiceCommand_Invalid_Command_Method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert string to &apos;{0}&apos; for parameter &apos;{1}&apos; on method &apos;{2}&apos;..
        /// </summary>
        internal static string Err_ServiceCommand_Parameter_Conversion_Unsupported {
            get {
                return ResourceManager.GetString("Err_ServiceCommand_Parameter_Conversion_Unsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writer parameter should be of type TextWriter, but was actually of type &apos;{0}&apos;.
        /// </summary>
        internal static string Err_ServiceCommand_WriterParameterWrongType {
            get {
                return ResourceManager.GetString("Err_ServiceCommand_WriterParameterWrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; service is not paused!.
        /// </summary>
        internal static string Err_ServiceRunner_Continue_ServiceNotPaused {
            get {
                return ResourceManager.GetString("Err_ServiceRunner_Continue_ServiceNotPaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; service is not running, so cannot be paused!.
        /// </summary>
        internal static string Err_ServiceRunner_Pause_ServiceNotRunning {
            get {
                return ResourceManager.GetString("Err_ServiceRunner_Pause_ServiceNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; service is already running!.
        /// </summary>
        internal static string Err_ServiceRunner_ServiceAlreadyRunning {
            get {
                return ResourceManager.GetString("Err_ServiceRunner_ServiceAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; service is not interactive!.
        /// </summary>
        internal static string Err_ServiceRunner_ServiceNotInteractive {
            get {
                return ResourceManager.GetString("Err_ServiceRunner_ServiceNotInteractive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; service is not running, so cannot be stopped!.
        /// </summary>
        internal static string Err_ServiceRunner_Stop_ServiceNotRunning {
            get {
                return ResourceManager.GetString("Err_ServiceRunner_Stop_ServiceNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service removal requires running as an administrator..
        /// </summary>
        internal static string Err_Uninstall_Requires_Administrator {
            get {
                return ResourceManager.GetString("Err_Uninstall_Requires_Administrator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; command is not supported by the service..
        /// </summary>
        internal static string Err_Unknown_Command {
            get {
                return ResourceManager.GetString("Err_Unknown_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service is not running as an administrator, some functionality will be disabled..
        /// </summary>
        internal static string Inf_BaseService_RunAsync_NotRunningAsAdmin {
            get {
                return ResourceManager.GetString("Inf_BaseService_RunAsync_NotRunningAsAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continued service &apos;{0}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_Continue_Continued {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Continue_Continued", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continuing service &apos;{0}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_Continue_Continuing {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Continue_Continuing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running &apos;{0}&apos; custom command on service &apos;{1}&apos; took {2}ms..
        /// </summary>
        internal static string Inf_ServiceRunner_CustomCommand_Complete {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_CustomCommand_Complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running &apos;{0}&apos; custom command on service &apos;{1}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_CustomCommand_Running {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_CustomCommand_Running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing the &apos;{0}&apos; service..
        /// </summary>
        internal static string Inf_ServiceRunner_Install {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed the &apos;{0}&apos; service from the &apos;{1}&apos; path..
        /// </summary>
        internal static string Inf_ServiceRunner_Installed {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paused service &apos;{0}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_Pause_Paused {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Pause_Paused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pausing service &apos;{0}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_Pause_Pausing {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Pause_Pausing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending the &apos;{0}&apos; power event to service &apos;{1}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_PowerEvent_Sending {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_PowerEvent_Sending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending the &apos;{0}&apos; power event to service &apos;{1}&apos; returned &apos;{2}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_PowerEvent_Sent {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_PowerEvent_Sent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending the &apos;{0}&apos; session change event for session &apos;{1}&apos; to service &apos;{2}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_SessionChange_Sending {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_SessionChange_Sending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sent the &apos;{0}&apos; session change event for session &apos;{1}&apos; to service &apos;{2}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_SessionChange_Sent {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_SessionChange_Sent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shut down service &apos;{0}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_Shutdown_ShutDown {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Shutdown_ShutDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutting down service &apos;{0}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_Shutdown_ShuttingDown {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Shutdown_ShuttingDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Started service &apos;{0}&apos; in {1}ms..
        /// </summary>
        internal static string Inf_ServiceRunner_Start_Started {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Start_Started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting service &apos;{0}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_Start_Starting {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Start_Starting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopped service &apos;{0}&apos; in {1}ms..
        /// </summary>
        internal static string Inf_ServiceRunner_Stop_Stopped {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Stop_Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping service &apos;{0}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_Stop_Stopping {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Stop_Stopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling the &apos;{0}&apos;..
        /// </summary>
        internal static string Inf_ServiceRunner_Uninstall {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalled the &apos;{0}&apos; service..
        /// </summary>
        internal static string Inf_ServiceRunner_Uninstalled {
            get {
                return ResourceManager.GetString("Inf_ServiceRunner_Uninstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service received a connection from &apos;{0}&apos;..
        /// </summary>
        internal static string Not_NamedPipeConnection_Connection {
            get {
                return ResourceManager.GetString("Not_NamedPipeConnection_Connection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service disconnected from &apos;{0}&apos;..
        /// </summary>
        internal static string Not_NamedPipeConnection_Disconnected {
            get {
                return ResourceManager.GetString("Not_NamedPipeConnection_Disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service command method cannot be generic.
        /// </summary>
        internal static string ServiceCommand_Generic {
            get {
                return ResourceManager.GetString("ServiceCommand_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service command method must have a declaring type.
        /// </summary>
        internal static string ServiceCommand_NoDeclaringType {
            get {
                return ResourceManager.GetString("ServiceCommand_NoDeclaringType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another instance of the service may be running, so starting or stopping the service may fail..
        /// </summary>
        internal static string Wrn_BaseService_EventHandlerAlreadyExists {
            get {
                return ResourceManager.GetString("Wrn_BaseService_EventHandlerAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; command alias for &apos;{1}&apos; is already used by the &apos;{2}&apos; command..
        /// </summary>
        internal static string Wrn_Command_Alias_Already_Used_By_Other_Command {
            get {
                return ResourceManager.GetString("Wrn_Command_Alias_Already_Used_By_Other_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; method cannot implement a service runner command as it is generic..
        /// </summary>
        internal static string Wrn_Command_Invalid_Generic {
            get {
                return ResourceManager.GetString("Wrn_Command_Invalid_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No description was specified for the &apos;{0}&apos; command..
        /// </summary>
        internal static string Wrn_No_Description_For_Command {
            get {
                return ResourceManager.GetString("Wrn_No_Description_For_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No description was specified for the &apos;{0}&apos; parameter in the &apos;{1}&apos; command..
        /// </summary>
        internal static string Wrn_No_Description_For_Parameter {
            get {
                return ResourceManager.GetString("Wrn_No_Description_For_Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No names were found for the &apos;{0}&apos; command..
        /// </summary>
        internal static string Wrn_No_Names_For_Command {
            get {
                return ResourceManager.GetString("Wrn_No_Names_For_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create a service runner command for the &apos;{0}&apos; method.
        /// </summary>
        internal static string Wrn_ServiceCommand_Creation_Failed {
            get {
                return ResourceManager.GetString("Wrn_ServiceCommand_Creation_Failed", resourceCulture);
            }
        }
    }
}
